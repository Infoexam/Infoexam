<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Http\Requests;
use App\Infoexam\Paper\PaperList;
use App\Infoexam\Paper\PaperQuestion;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Http\Request;

class PaperListsController extends Controller
{
    public function index(Request $request)
    {
        $title = trans('paper-lists.title');

        $auto_generated = (bool) $request->input('auto_generated', false);

        $paper_lists = PaperList::orderBy('id', 'desc')
            ->autoGenerated($auto_generated)
            ->paginate(10, ['ssn', 'name', 'remark']);

        return view('admin.paper-lists.index', compact('title', 'auto_generated', 'paper_lists'));
    }

    public function create()
    {
        $title = trans('paper-lists.create');

        return view('admin.paper-lists.create', compact('title'));
    }

    public function store(Requests\Admin\PaperListsRequest $request)
    {
        PaperList::create($request->all());

        return redirect()->route('admin.paper-lists.index');
    }

    public function show($ssn)
    {
        if (null === ($paper = PaperList::with(['questions'])->ssn($ssn)->first(['id', 'ssn', 'name'])))
        {
            return http_404('admin.paper-lists.index');
        }

        $title = trans('paper-questions.list');

        return view('admin.paper-lists.show', compact('title', 'paper'));
    }

    public function edit($ssn)
    {
        if (null === ($paper = PaperList::ssn($ssn)->first(['ssn', 'name', 'remark'])))
        {
            return http_404('admin.paper-lists.index');
        }

        $title = trans('paper-lists.edit');

        return view('admin.paper-lists.edit', compact('title', 'paper'));
    }

    public function update(Requests\Admin\PaperListsRequest $request, $ssn)
    {
        if (null === ($paper = PaperList::ssn($ssn)->first(['id'])))
        {
            http_404();
        }
        else
        {
            $paper->update($request->except(['ssn']));
        }

        return redirect()->route('admin.paper-lists.index');
    }

    public function destroy($ssn)
    {
        if (null === ($paper = PaperList::ssn($ssn)->first()))
        {
            http_404();
        }
        else
        {
            PaperQuestion::where('paper_list_id', '=', $paper->id)->delete();

            $paper->delete();
        }

        return redirect()->route('admin.paper-lists.index');
    }
}